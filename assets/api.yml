openapi: '3.0.0'

# =============================================================================

info:
  title: 'Users Microservice'
  description: >
    Part of the **Seedy FIUBA Project** ([view it on GitHub](https://github.com/orgs/SeedyFiuba-G8/)).
  version: '1.0.0'

# =============================================================================

servers:
  - url: http://sf-tdp2-users.herokuapp.com/
    description: 'Production'
  - url: http://sf-tdp2-users-dev.herokuapp.com/
    description: 'Staging'
  - url: http://localhost:3000/
    description: 'Local development'

# =============================================================================

tags:
  - name: Admins
  - name: Users
  - name: Status

# =============================================================================

paths:
  # USERS
  /user:
    post:
      summary: Register a new user
      description: Allows users to create a new basic account by email.
      tags:
        - Users
      requestBody:
        $ref: '#/components/requestBodies/postUser'
      responses:
        201:
          description: 'User was registered successfully.'
        400:
          $ref: '#/components/responses/400'
        409:
          $ref: '#/components/responses/409'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'

  /user/session:
    post:
      summary: Log in an user session
      description: Allows users to log in to their account in a new session.
      tags:
        - Users
      requestBody:
        $ref: '#/components/requestBodies/postUserSession'
      responses:
        200:
          $ref: '#/components/responses/postUserSession'
        400:
          $ref: '#/components/responses/400'
        409:
          $ref: '#/components/responses/409'
        415:
          $ref: '#/components/responses/415'
        500:
          $ref: '#/components/responses/500'

  # ADMINS

  # STATUS
  /ping:
    get:
      tags:
        - Status
      responses:
        200:
          $ref: '#/components/responses/ping'
        400:
          $ref: '#/components/responses/400'
        415:
          $ref: '#/components/responses/415'

  /health:
    get:
      tags:
        - Status
      responses:
        200:
          $ref: '#/components/responses/ping'
        400:
          $ref: '#/components/responses/400'
        415:
          $ref: '#/components/responses/415'

# =============================================================================

components:
  # ---------------------------------------------------------------------------
  responses:
    # ERRORS
    400:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    404:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    409:
      description: Conflict.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    415:
      description: Unsupported Media Type.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    500:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    # USERS
    postUserSession:
      description: User logged in successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserSession'

    # STATUS
    health:
      description: Microservice general health state reported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Health'

    ping:
      description: Server is active.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ping'

  # ---------------------------------------------------------------------------
  requestBodies:
    # USERS
    postUser:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRegisterData'

    postUserSession:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserLoginData'

  # ---------------------------------------------------------------------------
  schemas:
    # GENERAL
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            status:
              type: integer
            name:
              type: string
            message:
              type: string
            errors:
              type: object
            data:
              type: object
          required:
            - status
            - name

    # USERS
    UserLoginData:
      type: object
      properties:
        email:
          type: string
          example: 'memis_pomofot@gmail.com'
        password:
          type: string
          example: 'SomePassword123'
      required:
        - email
        - password

    UserRegisterData:
      type: object
      properties:
        email:
          type: string
          example: 'memis_pomofot@gmail.com'
        firstName:
          type: string
          example: 'Memis'
        lastName:
          type: string
          example: 'Pomofot'
        password:
          type: string
          example: 'SomePassword123'
      required:
        - email
        - firstName
        - lastName
        - password

    UserSession:
      type: object
      properties:
        uuid:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
      required:
        - uuid

    # STATUS
    Ping:
      type: object
      properties:
        status:
          type: string
          example: 'ok'
      required:
        - status

    Health:
      type: object
      properties:
        database:
          type: string
          example: 'UP'
      required:
        - database
#
# =============================================================================
