name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run_eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  run_tests:
    runs-on: ubuntu-latest
    needs: [run_eslint]
    env:
      CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
    steps:
      - uses: actions/checkout@master

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:coverage

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build_and_push:
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_MAIL }}
    needs: [run_eslint, run_tests]
    steps:
      - uses: actions/checkout@master

      - name: Build container
        run: docker build -t users_microservice .

      - name: Log in to Heroku Container Registry
        run: heroku container:login

      - name: Tag container
        run: docker tag users_microservice registry.heroku.com/sf-tdp2-users/web

      - name: Push container
        run: docker push registry.heroku.com/sf-tdp2-users/web

      - name: Release container
        run: heroku container:release web --app sf-tdp2-users

      - name: Set NODE_ENV to production
        run: heroku config:set NODE_ENV=production --app sf-tdp2-users
